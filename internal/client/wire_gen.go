// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package client

import (
	"github.com/aquasecurity/trivy-db/pkg/db"
	"github.com/aquasecurity/trivy/pkg/rpc/client/library"
	"github.com/aquasecurity/trivy/pkg/rpc/client/ospkg"
	"github.com/aquasecurity/trivy/pkg/scanner"
	library2 "github.com/aquasecurity/trivy/pkg/scanner/library"
	ospkg2 "github.com/aquasecurity/trivy/pkg/scanner/ospkg"
	"github.com/aquasecurity/trivy/pkg/vulnerability"
)

// Injectors from inject.go:

func initializeScanner(ospkgToken ospkg.Token, libToken library.Token, ospkgURL ospkg.RemoteURL, libURL library.RemoteURL) scanner.Scanner {
	osDetector := ospkg.NewProtobufClient(ospkgURL)
	detector := ospkg.NewDetector(ospkgToken, osDetector)
	ospkgScanner := ospkg2.NewScanner(detector)
	libDetector := library.NewProtobufClient(libURL)
	libraryDetector := library.NewDetector(libToken, libDetector)
	libraryScanner := library2.NewScanner(libraryDetector)
	scannerScanner := scanner.NewScanner(ospkgScanner, libraryScanner)
	return scannerScanner
}

func initializeVulnerabilityClient() vulnerability.Client {
	config := db.Config{}
	client := vulnerability.NewClient(config)
	return client
}
